namespace :notifications do
  desc "Send reminder notifications to users"
  task send_reminders: :environment do
    require 'net/http'
    require 'json'

    bot_token = ENV['TELEGRAM_BOT_TOKEN']
    webapp_url = ENV['WEBAPP_URL'] || 'https://financetrack21.netlify.app'

    unless bot_token
      puts "ERROR: TELEGRAM_BOT_TOKEN environment variable is not set"
      exit 1
    end

    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    settings = NotificationSetting.ready_to_send.includes(:user)

    puts "Found #{settings.count} users ready for reminders"

    settings.each do |setting|
      user = setting.user

      # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ Telegram ID
      unless user.telegram_id
        puts "Skipping user #{user.id} - no telegram_id"
        next
      end

      # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      last_transaction = user.transactions.order(created_at: :desc).first
      last_activity_text = if last_transaction
        time_ago = Time.current - last_transaction.created_at
        hours = (time_ago / 3600).round
        if hours < 1
          "–º–µ–Ω—å—à–µ —á–∞—Å–∞ –Ω–∞–∑–∞–¥"
        elsif hours < 24
          hours_word = hours == 1 ? '—á–∞—Å' : (hours < 5 ? '—á–∞—Å–∞' : '—á–∞—Å–æ–≤')
          "#{hours} #{hours_word} –Ω–∞–∑–∞–¥"
        else
          days = (hours / 24).round
          days_word = days == 1 ? '–¥–µ–Ω—å' : (days < 5 ? '–¥–Ω—è' : '–¥–Ω–µ–π')
          "#{days} #{days_word} –Ω–∞–∑–∞–¥"
        end
      else
        "–µ—â–µ –Ω–µ –±—ã–ª–æ –æ–ø–µ—Ä–∞—Ü–∏–π"
      end

      # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      message = <<~TEXT
        üí∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç WiseTrack

        –ù–µ –∑–∞–±—É–¥—å –≤–Ω–µ—Å—Ç–∏ —Å–≤–æ–∏ —Ç—Ä–∞—Ç—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è!

        üìä –ü–æ—Å–ª–µ–¥–Ω—è—è –æ–ø–µ—Ä–∞—Ü–∏—è: #{last_activity_text}
      TEXT

      # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
      keyboard = {
        inline_keyboard: [
          [{
            text: "üí∞ –û—Ç–∫—Ä—ã—Ç—å WiseTrack",
            web_app: { url: webapp_url }
          }]
        ]
      }

      # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ Telegram API
      uri = URI("https://api.telegram.org/bot#{bot_token}/sendMessage")
      request = Net::HTTP::Post.new(uri, 'Content-Type' => 'application/json')
      request.body = {
        chat_id: user.telegram_id,
        text: message,
        reply_markup: keyboard,
        parse_mode: 'HTML'
      }.to_json

      begin
        response = Net::HTTP.start(uri.hostname, uri.port, use_ssl: true) do |http|
          http.request(request)
        end

        if response.is_a?(Net::HTTPSuccess)
          puts "‚úì Sent reminder to user #{user.id} (#{user.name})"
          # –ü–ª–∞–Ω–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
          setting.schedule_next_send!
        else
          puts "‚úó Failed to send to user #{user.id}: #{response.body}"
        end
      rescue => e
        puts "‚úó Error sending to user #{user.id}: #{e.message}"
      end

      # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏, —á—Ç–æ–±—ã –Ω–µ –ø–æ–ø–∞—Å—Ç—å –≤ rate limit
      sleep 0.1
    end

    puts "Notification task completed"
  end
end
